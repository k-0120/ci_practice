name: make Data Mart

on: push

jobs:
  build:
    name: make data mart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: hellow, world
        run: echo hello, world!
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Make datasets
        run: |
          for dataset_name in $(find data_marts -type d | tail -n +2 | sed -e 's/^data_marts\//mart_/g' -e 's/\//_/g')
          do
            bq --location asia-northeast1 mk --force --dataset $dataset_name
          done

      - name: Define access control
        run: |
          for dataset_name in $(find data_marts -type d | tail -n +2 | sed -e 's/^data_marts\//mart_/g' -e 's/\//_/g')
          do
            data=$(bq show --format=prettyjson $GCP_PROJECT:events_20211105 | jq -r '.access' | tr -d '\n')
            pattern=".access|=${data}"
            bq show --format=prettyjson $GCP_PROJECT:$dataset_name | jq "$pattern" > tmp.json
            bq update --source tmp.json $GCP_PROJECT:$dataset_name
          done


      - name: Make view
        run: |
          for f in $(find data_marts -type f -name *.sql)
          do
            dataset_name=$(echo $f | sed -e 's/data_marts\//mart_/g' -e 's/\/\w*.sql//g' -e 's/\//_/g')
            view_name=$(echo $f | sed -e "s/.sql//g" -e "s/.*\///g" )
            if [[ view_name =~ table_ ]]
              then
                table_name=$(echo $view_name | sed 's/table_//g')
                bq query --replace --use_legacy_sql=false --destination_table ${dataset_name}.${table_name} < $f
              else
                bq mk --force --use_legacy_sql=false --view "`cat $f`" ${dataset_name}.${view_name}
            fi
          done